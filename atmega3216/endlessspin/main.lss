
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000fc  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000006cc  00000000  00000000  00000150  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000054  00000000  00000000  0000081c  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .comment      00000011  00000000  00000000  00000870  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000881  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000022d  00000000  00000000  000008a1  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000000f0  00000000  00000000  00000ace  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000012d  00000000  00000000  00000bbe  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00000cec  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000000d3  00000000  00000000  00000d10  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  00000de3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include <avr/io.h>
#include <util/delay.h>
int main (void) {
    DDRB |= 1 << PINB0;
  6c:	b8 9a       	sbi	0x17, 0	; 23
    DDRB |= 1 << PINB1;
  6e:	b9 9a       	sbi	0x17, 1	; 23
    DDRB |= 1 << PINB2;
  70:	ba 9a       	sbi	0x17, 2	; 23
    DDRB |= 1 << PINB3;
  72:	bb 9a       	sbi	0x17, 3	; 23
    int delay = 10;
    while (1) {
        PORTB ^= 1 << PINB0;
  74:	51 e0       	ldi	r21, 0x01	; 1
        _delay_ms(delay);
        PORTB ^= 1 << PINB0;
        PORTB ^= 1 << PINB1;
  76:	42 e0       	ldi	r20, 0x02	; 2
        _delay_ms(delay);
        PORTB ^= 1 << PINB1;
        PORTB ^= 1 << PINB2;
  78:	34 e0       	ldi	r19, 0x04	; 4
        _delay_ms(delay);
        PORTB ^= 1 << PINB2;
        PORTB ^= 1 << PINB3;
  7a:	28 e0       	ldi	r18, 0x08	; 8
        _delay_ms(delay);
        PORTB ^= 1 << PINB3;
        PORTB ^= 1 << PINB4;
  7c:	90 e1       	ldi	r25, 0x10	; 16
    DDRB |= 1 << PINB1;
    DDRB |= 1 << PINB2;
    DDRB |= 1 << PINB3;
    int delay = 10;
    while (1) {
        PORTB ^= 1 << PINB0;
  7e:	88 b3       	in	r24, 0x18	; 24
  80:	85 27       	eor	r24, r21
  82:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  84:	e3 ec       	ldi	r30, 0xC3	; 195
  86:	f9 e0       	ldi	r31, 0x09	; 9
  88:	31 97       	sbiw	r30, 0x01	; 1
  8a:	f1 f7       	brne	.-4      	; 0x88 <main+0x1c>
  8c:	00 c0       	rjmp	.+0      	; 0x8e <main+0x22>
  8e:	00 00       	nop
        _delay_ms(delay);
        PORTB ^= 1 << PINB0;
  90:	88 b3       	in	r24, 0x18	; 24
  92:	85 27       	eor	r24, r21
  94:	88 bb       	out	0x18, r24	; 24
        PORTB ^= 1 << PINB1;
  96:	88 b3       	in	r24, 0x18	; 24
  98:	84 27       	eor	r24, r20
  9a:	88 bb       	out	0x18, r24	; 24
  9c:	e3 ec       	ldi	r30, 0xC3	; 195
  9e:	f9 e0       	ldi	r31, 0x09	; 9
  a0:	31 97       	sbiw	r30, 0x01	; 1
  a2:	f1 f7       	brne	.-4      	; 0xa0 <main+0x34>
  a4:	00 c0       	rjmp	.+0      	; 0xa6 <main+0x3a>
  a6:	00 00       	nop
        _delay_ms(delay);
        PORTB ^= 1 << PINB1;
  a8:	88 b3       	in	r24, 0x18	; 24
  aa:	84 27       	eor	r24, r20
  ac:	88 bb       	out	0x18, r24	; 24
        PORTB ^= 1 << PINB2;
  ae:	88 b3       	in	r24, 0x18	; 24
  b0:	83 27       	eor	r24, r19
  b2:	88 bb       	out	0x18, r24	; 24
  b4:	e3 ec       	ldi	r30, 0xC3	; 195
  b6:	f9 e0       	ldi	r31, 0x09	; 9
  b8:	31 97       	sbiw	r30, 0x01	; 1
  ba:	f1 f7       	brne	.-4      	; 0xb8 <main+0x4c>
  bc:	00 c0       	rjmp	.+0      	; 0xbe <main+0x52>
  be:	00 00       	nop
        _delay_ms(delay);
        PORTB ^= 1 << PINB2;
  c0:	88 b3       	in	r24, 0x18	; 24
  c2:	83 27       	eor	r24, r19
  c4:	88 bb       	out	0x18, r24	; 24
        PORTB ^= 1 << PINB3;
  c6:	88 b3       	in	r24, 0x18	; 24
  c8:	82 27       	eor	r24, r18
  ca:	88 bb       	out	0x18, r24	; 24
  cc:	e3 ec       	ldi	r30, 0xC3	; 195
  ce:	f9 e0       	ldi	r31, 0x09	; 9
  d0:	31 97       	sbiw	r30, 0x01	; 1
  d2:	f1 f7       	brne	.-4      	; 0xd0 <main+0x64>
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <main+0x6a>
  d6:	00 00       	nop
        _delay_ms(delay);
        PORTB ^= 1 << PINB3;
  d8:	88 b3       	in	r24, 0x18	; 24
  da:	82 27       	eor	r24, r18
  dc:	88 bb       	out	0x18, r24	; 24
        PORTB ^= 1 << PINB4;
  de:	88 b3       	in	r24, 0x18	; 24
  e0:	89 27       	eor	r24, r25
  e2:	88 bb       	out	0x18, r24	; 24
  e4:	e3 ec       	ldi	r30, 0xC3	; 195
  e6:	f9 e0       	ldi	r31, 0x09	; 9
  e8:	31 97       	sbiw	r30, 0x01	; 1
  ea:	f1 f7       	brne	.-4      	; 0xe8 <main+0x7c>
  ec:	00 c0       	rjmp	.+0      	; 0xee <main+0x82>
  ee:	00 00       	nop
        _delay_ms(delay);
        PORTB ^= 1 << PINB4;
  f0:	88 b3       	in	r24, 0x18	; 24
  f2:	89 27       	eor	r24, r25
  f4:	88 bb       	out	0x18, r24	; 24
  f6:	c3 cf       	rjmp	.-122    	; 0x7e <main+0x12>

000000f8 <_exit>:
  f8:	f8 94       	cli

000000fa <__stop_program>:
  fa:	ff cf       	rjmp	.-2      	; 0xfa <__stop_program>
